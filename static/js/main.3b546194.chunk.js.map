{"version":3,"sources":["actions/exampleActions.js","actions/thunks.js","components/NewComment.js","components/Comment.js","components/Post.js","config/svgs.js","components/Posts.js","components/Home.js","components/EditPost.js","App.js","config/endpoints.js","reducers/exampleReducer.js","reducers/index.js","index.js"],"names":["saveData","data","property","type","payload","addData","deleteData","id","updateData","readAllFrom","route","cleanup","dispatch","a","axios","get","console","log","createOneFor","post","NewComment","state","username","comment","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","commentModel","commentUser","commentBody","commentAvatar","commentDate","Date","commentLikes","commentParentId","props","parent","newComment","this","onSubmit","onChange","placeholder","required","Component","connect","Comment","className","Post","deleteEntity","comments","useState","viewComments","setViewComments","history","useHistory","args","commentsForThisPost","filter","c","displayComments","map","i","key","convertDate","date","split","join","postDate","onClick","push","viewBox","d","forEach","postSubject","postUser","postBody","posts","delete","then","catch","err","deleteOneByIdFor","updatePost","displayPosts","p","Home","title","EditPost","subject","body","user","path","window","location","href","pop","creatingNewPost","updatingExistingPost","createPost","postLikes","updateModel","getCurrentPost","currentData","buttonText","to","current","put","updateOneByIdFor","withRouter","App","dataGrab","word","charAt","toUpperCase","slice","document","titleOfBlog","exact","render","loading","formatData","initialState","rootReducer","combineReducers","action","data1","property1","property2","data2","property3","id1","newObj","arrIndex","findIndex","item","Number","Object","keys","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3b546194.chunk.js","sourcesContent":["export const SAVE_DATA = 'SAVE_DATA';\nexport const saveData = (data, property) => ({\n    type: SAVE_DATA,\n    payload: [data, property]\n})\n\nexport const ADD_DATA = 'ADD_DATA';\nexport const addData = (data, property) => ({\n    type: ADD_DATA,\n    payload: [data, property]\n})\n\nexport const DELETE_DATA = 'DELETE_DATA';\nexport const deleteData = (property, id) => ({\n    type: DELETE_DATA,\n    payload: [property, id]\n})\n\nexport const UPDATE_DATA = 'UPDATE_DATA';\nexport const updateData = (data, property, id) => ({\n    type: UPDATE_DATA,\n    payload: [data, property, id]\n})\n\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const loadingData = () => ({ type: LOADING_DATA })\n\nexport const DATA_RETRIEVED = 'DATA_RETRIEVED';\nexport const dataRetrieved = () => ({ type: DATA_RETRIEVED })","import { addData, dataRetrieved, loadingData, saveData, deleteData, updateData } from './exampleActions'\nimport axios from 'axios';\n\nexport const readAllFrom = (route, property, cleanup) => async (dispatch) => {\n        dispatch(loadingData())\n    try {\n        let data = await axios.get(route)\n        if (typeof cleanup === 'function') data = cleanup(data) \n        console.log(data)\n        dispatch(saveData(data, property))\n        return data\n    }\n    catch (err) { console.log(err) }\n    finally { dispatch(dataRetrieved()) }\n}\n\nexport const createOneFor = (route, data, property, cleanup) => async (dispatch) => {\n    dispatch(loadingData())\n    try { \n        data = await axios.post(route, data)\n        if (typeof cleanup === 'function') data = cleanup(data) \n        dispatch(addData(data, property))\n    }\n    catch (err) { console.log(err) }\n    finally { dispatch(dataRetrieved()) }\n}\n\nexport const deleteOneByIdFor = (route, property, id) => async (dispatch) => {\n    dispatch(loadingData())\n    try { \n        await axios.delete(route).then(() => console.log('delete')).catch(err => console.log('error')) \n        dispatch(deleteData(property, id))\n    }\n    catch (err) { console.log(err) }\n    finally { dispatch(dataRetrieved()) }\n}\n\nexport const updateOneByIdFor = (route, data, property, id) => async (dispatch) => {\n    dispatch(loadingData())\n    try { \n        await axios.put(route, data).then(() => console.log('yeet')).catch(err => console.log('error')) \n        dispatch(updateData(data, property, id))\n    }\n    catch (err) { console.log(err) }\n    finally { dispatch(dataRetrieved()) }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createOneFor } from '../actions/thunks';\n\nclass NewComment extends Component {\n\n    state = {\n        username: '',\n        comment: ''\n    }\n\n    handleChange = e => this.setState({ [e.target.name] : e.target.value })\n\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state)\n\n        let commentModel = {\n            commentUser: this.state.username,\n            commentBody: this.state.comment,\n            commentAvatar: '???',\n            commentDate: new Date(),\n            commentLikes: 0,\n            commentParentId: this.props.parent\n        }\n\n        this.props.newComment('/comments', commentModel, 'comments', (data) => data.data)\n        this.setState({ username: '', comment: '' })\n    }\n\n    render() {\n        let { handleChange, handleSubmit } = this\n        let { username, comment } = this.state\n\n        return (\n            <>\n                <form onSubmit={handleSubmit} id='new-comment'>\n                        <label id='care-input'>\n                            <input \n                                name='username' \n                                value={username} \n                                onChange={handleChange}\n                                placeholder='username:'\n                                required \n                            />\n                            <div>Care to comment?</div>\n                        </label>\n                        <label>\n                    \n                            <textarea \n                                name='comment' \n                                value={comment} \n                                onChange={handleChange}\n                                required \n                            />\n                        </label>\n                        <button>Submit</button>\n                </form>\n            </>\n        )\n    }\n}\n\n//const mapStateToProps = state => ({})\n\nconst mapDispatchToProps = dispatch => ({\n    newComment: (route, data, property, cleanup) => dispatch(createOneFor(route, data, property, cleanup))\n})\n\nexport default connect(null, mapDispatchToProps)(NewComment);\n\n","import React from 'react';\n\n\nconst Comment = ({ comment }) => {\n    console.log(comment)\n    return (\n        <div className='comment'>\n            <h5>{comment.commentUser}</h5>\n            <div>{comment.commentDate}</div>\n            <div>{comment.commentBody}</div>\n        </div>\n    )\n}\n\nexport default Comment;","import React, { useState } from 'react';\nimport { deleteIcon, editIcon, commentIcon } from '../config/svgs';\nimport { useHistory } from 'react-router-dom';\n\nimport NewComment from './NewComment';\nimport Comment from './Comment';\n\nconst Post = ({ post, deleteEntity, comments }) => {\n    let [viewComments, setViewComments] = useState(false)\n    let history = useHistory()\n    let args = [`/posts/${post.id}`, 'posts', post.id]\n    let commentsForThisPost = comments.filter(c => c.commentParentId === post.id)\n\n    const handleUpdate = () => {\n        console.log('update?')\n        history.push(`/post/${post.id}`)\n        //updatePost(...args)\n    }\n    \n    const handleDelete = () => {\n        deleteEntity(...args)\n        commentsForThisPost.forEach(c => {\n            console.log('deleting comment...')\n            deleteEntity(`/comments/${c.id}`, 'comments', c.id)\n        })\n    }\n\n    const toggleComments = () => setViewComments(!viewComments)\n\n    let displayComments = viewComments ? commentsForThisPost.map((c, i) => <Comment comment={c} key={i} />) : ''\n    let newComment = viewComments ? <NewComment parent={post.id} /> : ''\n\n    const convertDate = date => date.split('T')[0].split('-').join('/')\n\n    console.log(convertDate(post.postDate))\n\n    return (\n        <div className='a-post'>\n            <div className='e-icon-b' onClick={handleUpdate}> {editIcon()} </div>\n            <div className='d-icon-b' onClick={handleDelete}> {deleteIcon()} </div>\n            <div className='c-icon-b' onClick={toggleComments}> {commentIcon()} </div>\n            <h4>{post.postSubject}</h4>\n            <h6>Posted by {post.postUser} on {convertDate(post.postDate)}</h6>\n            <div className='p-body'>{post.postBody}</div>\n            {displayComments}\n            {newComment}\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\n\nexport const editIcon = () => (\n    <svg className=\"iconic e-icon\" viewBox=\"0 0 20 20\">\n\t\t<path d=\"M18.303,4.742l-1.454-1.455c-0.171-0.171-0.475-0.171-0.646,0l-3.061,3.064H2.019c-0.251,0-0.457,0.205-0.457,0.456v9.578c0,0.251,0.206,0.456,0.457,0.456h13.683c0.252,0,0.457-0.205,0.457-0.456V7.533l2.144-2.146C18.481,5.208,18.483,4.917,18.303,4.742 M15.258,15.929H2.476V7.263h9.754L9.695,9.792c-0.057,0.057-0.101,0.13-0.119,0.212L9.18,11.36h-3.98c-0.251,0-0.457,0.205-0.457,0.456c0,0.253,0.205,0.456,0.457,0.456h4.336c0.023,0,0.899,0.02,1.498-0.127c0.312-0.077,0.55-0.137,0.55-0.137c0.08-0.018,0.155-0.059,0.212-0.118l3.463-3.443V15.929z M11.241,11.156l-1.078,0.267l0.267-1.076l6.097-6.091l0.808,0.808L11.241,11.156z\"></path>\n\t</svg>\n)\n\nexport const deleteIcon = () => (\n    <svg className=\"iconic d-icon\" viewBox=\"0 0 20 20\">\n\t    <path d=\"M17.114,3.923h-4.589V2.427c0-0.252-0.207-0.459-0.46-0.459H7.935c-0.252,0-0.459,0.207-0.459,0.459v1.496h-4.59c-0.252,0-0.459,0.205-0.459,0.459c0,0.252,0.207,0.459,0.459,0.459h1.51v12.732c0,0.252,0.207,0.459,0.459,0.459h10.29c0.254,0,0.459-0.207,0.459-0.459V4.841h1.511c0.252,0,0.459-0.207,0.459-0.459C17.573,4.127,17.366,3.923,17.114,3.923M8.394,2.886h3.214v0.918H8.394V2.886z M14.686,17.114H5.314V4.841h9.372V17.114z M12.525,7.306v7.344c0,0.252-0.207,0.459-0.46,0.459s-0.458-0.207-0.458-0.459V7.306c0-0.254,0.205-0.459,0.458-0.459S12.525,7.051,12.525,7.306M8.394,7.306v7.344c0,0.252-0.207,0.459-0.459,0.459s-0.459-0.207-0.459-0.459V7.306c0-0.254,0.207-0.459,0.459-0.459S8.394,7.051,8.394,7.306\"></path>\n\t</svg>\n)\n\nexport const commentIcon = () => (\n\t<svg className=\"iconic c-icon\" viewBox=\"0 0 20 20\">\n\t\t<path d=\"M14.999,8.543c0,0.229-0.188,0.417-0.416,0.417H5.417C5.187,8.959,5,8.772,5,8.543s0.188-0.417,0.417-0.417h9.167C14.812,8.126,14.999,8.314,14.999,8.543 M12.037,10.213H5.417C5.187,10.213,5,10.4,5,10.63c0,0.229,0.188,0.416,0.417,0.416h6.621c0.229,0,0.416-0.188,0.416-0.416C12.453,10.4,12.266,10.213,12.037,10.213 M14.583,6.046H5.417C5.187,6.046,5,6.233,5,6.463c0,0.229,0.188,0.417,0.417,0.417h9.167c0.229,0,0.416-0.188,0.416-0.417C14.999,6.233,14.812,6.046,14.583,6.046 M17.916,3.542v10c0,0.229-0.188,0.417-0.417,0.417H9.373l-2.829,2.796c-0.117,0.116-0.71,0.297-0.71-0.296v-2.5H2.5c-0.229,0-0.417-0.188-0.417-0.417v-10c0-0.229,0.188-0.417,0.417-0.417h15C17.729,3.126,17.916,3.313,17.916,3.542 M17.083,3.959H2.917v9.167H6.25c0.229,0,0.417,0.187,0.417,0.416v1.919l2.242-2.215c0.079-0.077,0.184-0.12,0.294-0.12h7.881V3.959z\"></path>\n\t</svg>\n)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteOneByIdFor, updateOneByIdFor } from '../actions/thunks';\n\nimport Post from './Post';\n\nconst Posts = ({ posts, deleteEntity, updatePost, comments }) => {\n\n    const displayPosts = posts.map((p, i) => {\n        return <Post \n                    post={p} \n                    key={i} \n                    deleteEntity={deleteEntity} \n                    updatePost={updatePost}\n                    comments={comments}\n                />\n    })\n\n    return (\n        <div id='posts'>\n            {displayPosts}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    state: state,\n    posts: state.data.posts,\n    comments: state.data.comments\n})\n\nconst mapDispatchToProps = dispatch => ({\n    deleteEntity: (route, property, id) => dispatch(deleteOneByIdFor(route, property, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Posts from './Posts';\n\nconst Home = ({ title }) => {\n    let history = useHistory()\n\n    const handleClick = e => history.push('/post')\n\n    return (\n        <>\n            <div onClick={handleClick} className='n-post'>\n                <span>New Post</span>\n            </div>\n            <Posts />\n        </>\n    )\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createOneFor, readAllFrom, updateOneByIdFor } from '../actions/thunks';\n\nclass EditPost extends Component {\n\n    state = {\n        subject: '',\n        body: '',\n        user: '',\n        path: window.location.href.split('/').pop()\n    }\n\n    async componentDidMount() { \n        if (this.state.path !== 'post') {\n          try {\n            let currentData = await this.props.getCurrentPost(`/posts/${this.state.path}`, 'current', (data) => data.data)\n            this.setState({ \n                subject: currentData.postSubject,\n                body: currentData.postBody,\n                user: currentData.postUser\n            })\n          } catch (err) {}\n        }\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.state.path === 'post' ? this.creatingNewPost() : this.updatingExistingPost()\n    }\n\n    creatingNewPost = () => {\n        let { createPost } = this.props\n\n        let postModel = {\n            postSubject: this.state.subject,\n            postBody: this.state.body,\n            postUser: this.state.user,\n            postDate: new Date(),\n            postLikes: 0\n        }\n\n        createPost('/posts', postModel, 'posts', (data) => data.data)\n        console.log('creating...')\n        this.props.history.push('/')\n    }\n\n    updatingExistingPost = () => {\n        let { updatePost } = this.props\n\n        let updateModel = {\n            postSubject: this.state.subject,\n            postBody: this.state.body,\n            postUser: this.state.user\n        }\n\n        updatePost(`/posts/${this.state.path}`, updateModel, 'posts', this.state.path)\n        console.log('updating...')\n        this.props.history.push('/')\n\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name] : value })\n    }\n\n    render() {\n        let { subject, body, user } = this.state\n        let { handleSubmit, handleChange } = this\n\n        let buttonText = this.state.path === 'post' ? 'POST' : 'UPDATE'\n\n        return (\n            <>\n                <Link to='/' className='n-post'>Back</Link>\n                <form onSubmit={handleSubmit} id='new-post'>\n                    <label>\n                        <h3>Subject</h3>\n                        <input \n                            name='subject' \n                            value={subject} \n                            onChange={handleChange}\n                            required \n                        />\n                    </label>\n                    <label>\n                        <h3>&nbsp;</h3>\n                        <input \n                            name='user' \n                            value={user} \n                            onChange={handleChange}\n                            placeholder='username:'\n                            required \n                        />\n                    </label>\n                    <label id='text-body'>\n                        <h3>Body</h3>\n                        <textarea\n                            name='body' \n                            value={body} \n                            onChange={handleChange} \n                            required \n                        />\n                    </label>\n                    <button>{buttonText}</button>\n                </form>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    current: state.data.current\n})\n\nconst mapDispatchToProps = dispatch => ({\n    createPost: (route, data, property, cleanup) => dispatch(createOneFor(route, data, property, cleanup)),\n    getCurrentPost: (route, property, cleanup) => dispatch(readAllFrom(route, property, cleanup)),\n    updatePost: (route, data, property, id) => dispatch(updateOneByIdFor(route, data, property, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(EditPost));","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { readAllFrom } from './actions/thunks'\nimport { saveData } from './actions/exampleActions';\nimport { WORD_API } from './config/endpoints';\n\nimport Home from './components/Home';\nimport EditPost from './components/EditPost';\n\nclass App extends Component {\n\n  state = {}\n\n  componentDidMount() { \n    // This app runs with the Employee2020 Java/Spring Boot server\n\n    let { dataGrab } = this.props\n\n    const dataCleanup = (data) => {\n      let word = data.data[0].charAt(0).toUpperCase() + data.data[0].slice(1)\n      document.title = `The ${word} Blog`\n      return word\n    }\n\n    dataGrab(WORD_API, 'titleOfBlog', dataCleanup)\n    dataGrab('/posts', 'posts', (data) => data.data)\n    dataGrab('/comments', 'comments', (data) => data.data)\n    console.log('v1.01')\n  }\n\n  //https://www.googleapis.com/customsearch/v1\n\n  render() {\n\n    let { titleOfBlog } = this.props\n\n    return (\n      <div id='main-div'>\n        <h1>The {titleOfBlog} Blog</h1>\n        <Router>\n          <Switch>\n            <Route exact path='/' render={()=> <Home title={titleOfBlog}/>} />\n            <Route path='/post' render={() => <EditPost />} />\n          </Switch>\n        </Router>\n      </div>\n     );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  comments: state.data.comments,\n  titleOfBlog: state.data.titleOfBlog,\n  loading: state.data.loading\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  dataGrab: (route, property, cleanup) => dispatch(readAllFrom(route, property, cleanup)),\n  formatData: (data, property) => dispatch(saveData(data, property))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// export const API = 'https://damp-shore-59223.herokuapp.com/api/employees'\nexport const WORD_API = 'https://random-words-api.herokuapp.com/w?n=1';","import { ADD_DATA, DATA_RETRIEVED, DELETE_DATA, LOADING_DATA, SAVE_DATA, UPDATE_DATA } from \"../actions/exampleActions\";\n\nexport const initialState = {\n    loading: 0,\n    comments: [],\n    posts: [],\n    current: {},\n    titleOfBlog: []\n}\n\nexport default function exampleReducer(state = initialState, action) {\n    switch(action.type) {\n        case SAVE_DATA:\n            let [data, property] = action.payload\n            return {\n                ...state, \n                [property] : data \n            }\n        case ADD_DATA:\n            let [data1, property1] = action.payload\n            return {\n                ...state, \n                [property1]: [...state[property1], data1]\n            }\n        case DELETE_DATA:\n            let [property2, id] = action.payload\n            return {\n                ...state,\n                [property2]: state[property2].filter(d => d.id !== id)\n            }\n        case UPDATE_DATA: \n            let [data2, property3, id1] = action.payload\n            let newObj = [...state[property3]]\n            let arrIndex = newObj.findIndex(item => Number(item.id) === Number(id1))\n            Object.keys(data2).forEach(key => newObj[arrIndex][key] = data2[key])\n            return {\n                ...state,\n                [property3]: newObj\n            }\n        case LOADING_DATA:\n            return {\n                ...state, \n                loading: state.loading + 1\n            }\n        case DATA_RETRIEVED:\n            return {\n                ...state, \n                loading: state.loading - 1\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport exampleReducer from './exampleReducer';\n\nconst rootReducer = combineReducers({\n    data: exampleReducer                                  // The second property name in mapStateToProps    (state.posts.loading)\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>                     \n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}